@startuml
class "entities::players::Player" as C_0008649833643707248413
class C_0008649833643707248413 {
+Player() = default : void
+Player(const Player & other) = default : void
+Player(Player && other) noexcept = default : void
+Player(const json & j) : void
+~Player() constexpr = default : void
..
+operator=(const Player & other) = default : Player &
+operator=(Player && other) noexcept = default : Player &
..
+Attack(Player & target) : GameField::AttackResult
+GetCursorPosition() : Coordinates &
+GetGameField() : GameField &
+GetShipManager() : ShipManager &
+IsDoubleDamageActivated() : bool &
+operator basic_json() const : json
__
#cursor_position : Coordinates
#game_field_ : GameField
#is_double_damage_activated : bool
#ship_manager_ : ShipManager
}
class "entities::players::BotPlayer" as C_0001723364980034919539
class C_0001723364980034919539 {
+BotPlayer() : void
+BotPlayer(const json & j) : void
..
+CheckAttackResult(GameField::AttackResult attack_result) : Strategy
+GenerateShipsPlacement() : void
-GetAvailableShipPositions(uint8_t ship_length) const : std::vector<std::pair<Coordinates,Ship::Orientation>>
-InitializeBeforeNextShip() : void
+MoveCursor(const GameField & target_game_field) : void
-MoveCursorFindOutOrientation(const GameField & target_game_field) : void
-MoveCursorFinishLastSegments(const GameField & target_game_field) : void
-MoveCursorRandom(const GameField & target_game_field) : void
-MoveCursorReachEdge(const GameField & target_game_field) : void
+operator basic_json() const : json
__
-chosen_directions_ : std::vector<Direction>
{static} -direction_map_ : const std::map<Direction,Coordinates>
-reached_ship_edge_ : bool
{static} -rng_ : utilities::RandomGenerator
-ship_orientation_ : std::pair<bool,Ship::Orientation>
-strategy_ : Strategy
}
class "entities::players::HumanPlayer" as C_0002707961049795840249
class C_0002707961049795840249 {
+HumanPlayer() : void
+HumanPlayer(const json & j) : void
..
+ApplyAbility(Player & target) : std::unique_ptr<abilities::Ability>
+Attack(Player & target) : GameField::AttackResult
+GetAbilityManager() : abilities::AbilityManager &
+operator basic_json() const : json
__
-ability_manager_ : abilities::AbilityManager
}
class "Game" as C_0017304172626563555845
class C_0017304172626563555845 {
+Game(output::GameRenderer & game_renderer) : void
..
+GetBotPlayer() : BotPlayer &
+GetHumanPlayer() : HumanPlayer &
+HandleCommand(input::Command command) : void
+IsRunning() const : bool
+Load(const std::string & filename) : void
+Render<T>(const T & object) : void
+Render<T,S>(const T & t, const S & s) : void
+Save(const std::string & filename) : void
+UpdateState(states::State * new_state) : void
__
-bot_player_ : BotPlayer
-game_renderer_ : output::GameRenderer &
-human_player_ : HumanPlayer
-is_running_ : bool
-state_ : std::unique_ptr<states::State>
}
C_0008649833643707248413 <|-- C_0001723364980034919539

C_0008649833643707248413 <|-- C_0002707961049795840249

C_0017304172626563555845 o-- C_0002707961049795840249 : -human_player_
C_0017304172626563555845 o-- C_0001723364980034919539 : -bot_player_

'Generated with clang-uml, version 972dbea
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
